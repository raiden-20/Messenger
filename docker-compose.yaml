version: "3.9"
services:

  auth_service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - ${AUTH_SERVICE_PORT}:8000
    depends_on:
      - auth_db
    
  auth_db:
    image: postgres:14
    volumes:
      - auth_cluster:/var/lib/postgresql/data
      - ./init_db/auth_init_db.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=${AUTH_POSTGRES_USER}
      - POSTGRES_PASSWORD=${AUTH_POSTGRES_PASSWORD}
      - POSTGRES_DB=${AUTH_POSTGRES_DB}
    restart: on-failure
    ports:
      - 5000:5432
    healthcheck:
      test: "CMD-SHELL pg_isready -U ${AUTH_POSTGRES_USER} -d ${AUTH_POSTGRES_DB}"

  rabbitmq:
    image: rabbitmq:3.11.25-management
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    hostname: rabbitmq
    restart: on-failure
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    healthcheck:
      test: "CMD rabbitmqctl status"

  mail_sender:
    build:
      context: ./mail-sender
      dockerfile: Dockerfile
    ports:
      - ${MAIL_SENDER_PORT}:8001
    depends_on:
      - rabbitmq
      - auth_service


volumes:
  auth_cluster:
    name: auth_cluster
  rabbitmq:
    name: rabbitmq