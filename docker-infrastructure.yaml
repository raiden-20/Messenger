version: "3.9"
services:
  kong:
    container_name: kong
    image: kong:alpine
    restart: on-failure
    volumes:
      - ./kong.yml:/kong/declarative/kong.yml
    environment:
      - KONG_DATABASE=off
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_GUI_URL=localhost:8002
      - KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml
    networks:
      - backend
    ports:
      - 8002:8002
      - 8443:8443
      - 8001:8001
      - 8444:8444

  nginx:
    image: nginx:1.25.3
    container_name: nginx
    restart: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:8080
    networks:
      - backend
    depends_on:
      - kong

  # konga:
  #   image: pantsel/konga
  #   container_name: konga
  #   environment:
  #     - NODE_ENV=production
  #   networks:
  #     - backend
  #   ports:
  #     - 1337:1337

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - ${MINIO_GUI_PORT}:9001
    volumes:
      - minio:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    networks:
      - backend
    command: server --console-address ":9001" /data

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.25-management
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    hostname: rabbitmq
    restart: on-failure
    ports:
      - ${RABBITMQ_ADMIN_PORT}:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    networks:
      - backend
    healthcheck:
      test: "CMD rabbitmqctl status"

volumes:
  rabbitmq:
    name: rabbitmq
  minio: 
    name: minio

networks:
  backend:
    name: backend